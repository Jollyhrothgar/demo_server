HOSTNAME : 0.0.0.0
GITLAB_SERVER : 192.168.0.125
PORT : 6969
STATIC : demo_framework_server
TEMPLATES : demo_framework_server/templates
DEMO_DIR : demos
API_TOKEN : 8icMAisLE_cMZZ9v1TtE
API_URL : http://192.168.0.125/api/v3/projects/all?private_token=8icMAisLE_cMZZ9v1TtE
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'str_args': {'parameters': [('mystr', <Parameter "mystr:str">), ('myint', <Parameter "myint:int">)], 'documentation': '\n    A function which puts an int and a string into a string\n    '}, 'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'str_args': {'parameters': [('mystr', <Parameter "mystr:str">), ('myint', <Parameter "myint:int">)], 'documentation': '\n    A function which puts an int and a string into a string\n    '}, 'args_notype': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n    '}, 'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'str_args': {'parameters': [('mystr', <Parameter "mystr:str">), ('myint', <Parameter "myint:int">)], 'documentation': '\n    A function which puts an int and a string into a string\n    '}, 'args_notype_clone': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n\n    A clone of args_notype but returns json string.\n    '}, 'args_notype': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n    '}, 'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'hard_func': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('default1', <Parameter "default1='Fanny'">), ('default2', <Parameter "default2:int=19">), ('args', <Parameter "*args">), ('kwargs', <Parameter "**kwargs">)], 'documentation': "\n    A complicated function signature with list-type arguments, named arguments,\n    default arguments, and keyword arguments. Yikes!!! There's even partial\n    annotation.\n    "}, 'str_args': {'parameters': [('mystr', <Parameter "mystr:str">), ('myint', <Parameter "myint:int">)], 'documentation': '\n    A function which puts an int and a string into a string\n    '}, 'args_notype_clone': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n\n    A clone of args_notype but returns json string.\n    '}, 'args_notype': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n    '}, 'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
FLASK SERVER UPDATED {'a20039fe-67fd-481f-b9c4-59bfe978250e': {'IP': '127.0.0.1', 'func': {'hard_func': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('default1', <Parameter "default1='Fanny'">), ('default2', <Parameter "default2:int=19">), ('args', <Parameter "*args">), ('kwargs', <Parameter "**kwargs">)], 'documentation': "\n    A complicated function signature with list-type arguments, named arguments,\n    default arguments, and keyword arguments. Yikes!!! There's even partial\n    annotation.\n    "}, 'arbitrary_func': {'parameters': [('args', <Parameter "*args">), ('kwargs', <Parameter "**kwargs">)], 'documentation': ' \n    A function that takes an arbitrary list of named and unnamed arguments\n\n    The author should probably document somewhere what to use\n\n    Note that order of args and kwargs matters, therefore, order should be maintained no matter what.\n    '}, 'str_args': {'parameters': [('mystr', <Parameter "mystr:str">), ('myint', <Parameter "myint:int">)], 'documentation': '\n    A function which puts an int and a string into a string\n    '}, 'args_notype_clone': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n\n    A clone of args_notype but returns json string.\n    '}, 'args_notype': {'parameters': [('arg1', <Parameter "arg1">), ('arg2', <Parameter "arg2">), ('arg3', <Parameter "arg3">)], 'documentation': '\n    A function which takes three arguments, but type is not specified.\n\n    args 1 and 2 should be integers, which are added, arg3 is a string \n    '}, 'no_args': {'parameters': [], 'documentation': '\n    A functiont that returns some kind of string\n    '}, 'square': {'parameters': [('x', <Parameter "x:float">)], 'documentation': '\n    takes a floating point input, returns the square of that input\n    '}}, 'PORT': 35557}}
ORIGIN IP:  127.0.0.1
